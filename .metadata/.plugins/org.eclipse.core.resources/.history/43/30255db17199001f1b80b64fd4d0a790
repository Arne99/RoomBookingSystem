package suncertify.db;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

import java.io.DataInput;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;

import org.junit.Test;
import org.junit.runner.RunWith;

/**
 * Tests for the Class {@link DataFileFormatReader}.
 * 
 * @author arnelandwehr
 */
public class DataFileFormatReaderTest {

    /** the {@code DataFileFormatReader} to test. */
    private DataFileFormatReader formatReader;

    /**
     * Tests the {@code DataFileFormatReader} for throwing an
     * {@code InvalidDataFormatException} if the DataFile contains an invalid
     * <b>MagicCookie</b>.
     * 
     * @throws IOException
     *             caught by JUnit
     * @throws InvalidDataFormatException
     *             expected Exception
     */
    @Test(expected = InvalidDataFormatException.class)
    public final void dataFileFormatReaderThrowsExceptionForInvalidMagicCookie()
	    throws IOException, InvalidDataFormatException {

	int expectedMagicCookie = 123;

	DataInput dataFileStream = mock(DataInput.class);
	int invalidMagicCookie = 124;
	when(dataFileStream.readInt()).thenReturn(invalidMagicCookie);

	formatReader = new DataFileFormatReader(expectedMagicCookie);
	formatReader.extractDataFileFormat(dataFileStream);
    }

    /**
     * 
     * @throws IOException caught by JUnit
     * @throws InvalidDataFormatException caught by JUnit
     */
    @Test
    public final void dataFileFormatReaderCreatesCorrectDataFileFormat()
	    throws IOException, InvalidDataFormatException {

	int expectedMagicCookie = 124;
	int databaseInformation = 1234;

	DataInput dataFileStream = mock(DataInput.class);
	when(dataFileStream.readInt()).thenReturn(expectedMagicCookie,
		databaseInformation);

	formatReader = new DataFileFormatReader(expectedMagicCookie);
	DataFileFormat extractedFormat = formatReader
		.extractDataFileFormat(dataFileStream);

	DataFileFormat expectedFormat = new DataFileFormat(expectedMagicCookie,
		databaseInformation);
	assertEquals("DataFileFormats are not equals!", expectedFormat,
		extractedFormat);
    }
}
